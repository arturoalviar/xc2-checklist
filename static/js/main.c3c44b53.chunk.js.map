{"version":3,"sources":["serviceWorker.js","components/Header/index.js","data/staticBladeData.js","data/blades.js","blades.js","components/BladeIndicator/BladeIndicator.js","components/Blade/Blade.js","components/ControlSelect/ControlSelect.js","components/Accordion/index.js","data/filterOptions.js","components/FilterOptions/FilterOptions.js","components/ControlToggle/ControlToggle.js","components/UserSettings/UserSettings.js","components/ListControls/ListControls.js","components/BladeList/BladeList.js","components/Home/index.js","components/About/index.js","components/App/App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Header","react_default","a","createElement","className","react_router_dom","to","href","target","rel","staticBladeData","homura","image","name","hikari","nia","byakou","hana","hanaQT","hanaQTpi","suzaku","kagutsuchi","wadatsumi","saika","ibuki","vasara","hotaru","kubira","azami","uka","raiko","tokiha","shiki","nyuutsu","yuuouu","zakuro","musubi","idaten","mei","dikarao","teni","guren","yaegiri","mikumari","seori","rinne","menou","kasane","tsuki","nanakoori","kosmos","hanabuster","telos","shulk","fiorun","hibana","kamuya","eruma","yoshitsune","benkei","satahiko","kamui","zantetsu","ragou","ootsuchi","blades","method","isVisible","role","type","weapon","isSpoiler","link","methodName","isDlc","isNewGamePlus","Object","keys","Blades","forEach","blade","obtained","status","objectSpread","BladeIndicator","updateObtained","event","_objectSpread2","checked","updatedBlade","_this","props","details","defineProperty","renderAvatar","staticDetails","style","backgroundImage","concat","renderStatus","_this$props$details","this","id","value","onChange","htmlFor","Component","Blade","makeBladeClassName","index","renderInfo","obtainment","components_BladeIndicator_BladeIndicator","ControlSelect","label","handleChange","options","map","option","key","Accordion","isOpen","accordionRef","React","createRef","transitionOptions","classNames","timeout","enter","exit","updateUserSettingsHeight","oldHeight","element","current","height","offsetHeight","clientHeight","handleTransitionEnd","prevProps","prevState","setState","currentHeight","children","react_transition_group","assign","in","appear","ref","onTransitionEnd","FilterOptions","currentTarget","filter","updateFilters","components_Accordion","components_ControlSelect_ControlSelect","ControlToggle","updateOptions","renderCheckbox","_this$props","isChecked","UserSettings","updateBladeListByOptions","_this2","userOptions","localStorage","getItem","JSON","parse","setItem","stringify","_this$state$options","components_ControlToggle_ControlToggle","ListControls","isSettingsOpen","isFiltersOpen","handleClick","preventDefault","updatedState","renderButtons","_this$state","onClick","lib_default","innerWidth","_this$state2","components_UserSettings_UserSettings","components_FilterOptions_FilterOptions","BladeList","filters","hasValue","updatedBlades","hasOwnProperty","filterBlades","every","item","renderBlade","components_Blade_Blade","renderBlades","length","filteredList","aria-label","localStoredBlades","components_ListControls_ListControls","Home","components_BladeList_BladeList","About","fontSize","App","components_Header","react_router","exact","path","component","ReactDOM","render","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c3c44b53.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => (\n  <div className=\"app-banner\">\n    <div className=\"container\">\n      <h1>\n        <Link to=\"/\">\n          Xenoblade Chronicles 2 <br /> Blade Checklist\n        </Link>\n      </h1>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"about\">About</Link>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/arturoalviar/xb2-checklist\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n);\n\nexport default Header;\n","const staticBladeData = {\n  homura: {\n    image: \"https://i.imgur.com/Hcthn3d.png\",\n    name: \"Pyra\"\n  },\n  hikari: {\n    image: \"https://i.imgur.com/sH7UC24.png\",\n    name: \"Mythra\"\n  },\n  nia: {\n    image: \"https://i.imgur.com/vuPHT2g.png\",\n    name: \"Nia\"\n  },\n  byakou: {\n    image: \"https://i.imgur.com/VP9guKc.png\",\n    name: \"Dromarch\"\n  },\n  hana: {\n    image: \"https://i.imgur.com/KK73TrZ.png\",\n    name: \"Poppi-A\"\n  },\n  hanaQT: {\n    image: \"https://i.imgur.com/qpsCfuj.png\",\n    name: \"Poppi-QT\"\n  },\n  hanaQTpi: {\n    image: \"https://i.imgur.com/UWz6RCY.png\",\n    name: \"Poppi-QTπ\"\n  },\n  suzaku: {\n    image: \"https://i.imgur.com/PkDkd3Z.png\",\n    name: \"Roc\"\n  },\n  kagutsuchi: {\n    image: \"https://i.imgur.com/dskfcaQ.png\",\n    name: \"Brighid\"\n  },\n  wadatsumi: {\n    image: \"https://i.imgur.com/MnrHLPm.jpg\",\n    name: \"Aegaeon\"\n  },\n  saika: {\n    image: \"https://i.imgur.com/4B5WFHt.png\",\n    name: \"Pandoria\"\n  },\n  ibuki: {\n    image: \"https://i.imgur.com/9TgXDDT.png\",\n    name: \"Finch\"\n  },\n  vasara: {\n    image: \"https://i.imgur.com/abdRoOF.jpg\",\n    name: \"Perceval\"\n  },\n  hotaru: {\n    image: \"https://i.imgur.com/8zGsMFx.png\",\n    name: \"Floren\"\n  },\n  kubira: {\n    image: \"https://i.imgur.com/gAd24Db.jpg\",\n    name: \"Dagas\"\n  },\n  azami: {\n    image: \"https://i.imgur.com/xdISr3A.png\",\n    name: \"Azami\"\n  },\n  uka: {\n    image: \"https://i.imgur.com/TTx6ftO.jpg\",\n    name: \"Nim\"\n  },\n  raiko: {\n    image: \"https://i.imgur.com/uryubr8.jpg\",\n    name: \"Electra\"\n  },\n  tokiha: {\n    image: \"https://i.imgur.com/LpBOmuX.jpg\",\n    name: \"Perun\"\n  },\n  shiki: {\n    image: \"https://i.imgur.com/lGOJeTk.jpg\",\n    name: \"Adenine\"\n  },\n  nyuutsu: {\n    image: \"https://i.imgur.com/sJsoJ6f.jpg\",\n    name: \"Newt\"\n  },\n  yuuouu: {\n    image: \"https://i.imgur.com/McjubJ8.jpg\",\n    name: \"Gorg\"\n  },\n  zakuro: {\n    image: \"https://i.imgur.com/JRI1lnr.jpg\",\n    name: \"Kora\"\n  },\n  musubi: {\n    image: \"https://i.imgur.com/2NRbjZS.jpg\",\n    name: \"Vess\"\n  },\n  idaten: {\n    image: \"https://i.imgur.com/r548Gtt.jpg\",\n    name: \"Boreas\"\n  },\n  mei: {\n    image: \"https://i.imgur.com/EtSK1BK.png\",\n    name: \"Vale\"\n  },\n  dikarao: {\n    image: \"https://i.imgur.com/BN7M3HT.png\",\n    name: \"Wulfric\"\n  },\n  teni: {\n    image: \"https://i.imgur.com/xxyHG57.png\",\n    name: \"Herald\"\n  },\n  guren: {\n    image: \"https://i.imgur.com/fERlfM9.png\",\n    name: \"Godfrey\"\n  },\n  yaegiri: {\n    image: \"https://i.imgur.com/ndM2BlL.jpg\",\n    name: \"Zenobia\"\n  },\n  mikumari: {\n    image: \"https://i.imgur.com/XgFnUBI.jpg\",\n    name: \"Praxis\"\n  },\n  seori: {\n    image: \"https://i.imgur.com/ie6YfPg.jpg\",\n    name: \"Theory\"\n  },\n  rinne: {\n    image: \"https://i.imgur.com/bCsId9w.jpg\",\n    name: \"Sheba\"\n  },\n  menou: {\n    image: \"https://i.imgur.com/XSJKJCd.jpg\",\n    name: \"Agate\"\n  },\n  kasane: {\n    image: \"https://i.imgur.com/S6gvL8P.jpg\",\n    name: \"Kasandra\"\n  },\n  tsuki: {\n    image: \"https://i.imgur.com/JmpLFRR.jpg\",\n    name: \"Dahlia\"\n  },\n  nanakoori: {\n    image: \"https://i.imgur.com/JiLC7tH.jpg\",\n    name: \"Ursula\"\n  },\n  kosmos: {\n    image: \"https://i.imgur.com/DDfZJUz.jpg\",\n    name: \"KOS-MOS\"\n  },\n  hanabuster: {\n    image: \"https://i.imgur.com/ukBiCWh.png\",\n    name: \"Poppibuster\"\n  },\n  telos: {\n    image: \"https://i.imgur.com/4y0b0tQ.png\",\n    name: \"T-elos\"\n  },\n  shulk: {\n    image: \"https://i.imgur.com/MFxoAL0.png\",\n    name: \"Shulk\"\n  },\n  fiorun: {\n    image: \"https://i.imgur.com/8d3Seu8.png\",\n    name: \"Fiora\"\n  },\n  hibana: {\n    image: \"https://i.imgur.com/bmTftl2.png\",\n    name: \"Crossette\"\n  },\n  kamuya: {\n    image: \"https://i.imgur.com/FexqtXq.png\",\n    name: \"Corvin\"\n  },\n  eruma: {\n    image: \"https://i.imgur.com/HHREGZk.png\",\n    name: \"Elma\"\n  },\n  yoshitsune: {\n    image: \"https://i.imgur.com/MG8rgUv.png\",\n    name: \"Akhos\"\n  },\n  benkei: {\n    image: \"https://i.imgur.com/SRh7Z7T.png\",\n    name: \"Patroka\"\n  },\n  satahiko: {\n    image: \"https://i.imgur.com/QzIb9Mc.png\",\n    name: \"Mikhail\"\n  },\n  kamui: {\n    image: \"https://i.imgur.com/ZdYAiIA.png\",\n    name: \"Obrona\"\n  },\n  zantetsu: {\n    image: \"https://i.imgur.com/gUm8iNS.png\",\n    name: \"Server\"\n  },\n  ragou: {\n    image: \"https://i.imgur.com/TntRzUF.png\",\n    name: \"Perdido\"\n  },\n  ootsuchi: {\n    image: \"https://i.imgur.com/YkdAIi8.png\",\n    name: \"Cressidus\"\n  }\n};\n\nexport default staticBladeData;\n","const blades = {\n  homura: {\n    method: \"Story\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"fire\",\n    weapon: \"Aegis Sword\"\n  },\n  hikari: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"light\",\n    weapon: \"Aegis Sword\"\n  },\n  nia: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"hlr\",\n    type: \"water\",\n    weapon: \"Catalyst Scimitar\"\n  },\n  byakou: {\n    method: \"Story\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"water\",\n    weapon: \"Dual Scythes\"\n  },\n  hana: {\n    method: \"Story\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"earth\",\n    weapon: \"Drill Shield\"\n  },\n  hanaQT: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"earth\",\n    weapon: \"Mech Arms\"\n  },\n  hanaQTpi: {\n    isSpoiler: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"earth\",\n    weapon: \"Variable Saber\"\n  },\n  suzaku: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"wind\",\n    weapon: \"Dual Scythes\"\n  },\n  kagutsuchi: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"fire\",\n    weapon: \"Whipswords\"\n  },\n  wadatsumi: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"water\",\n    weapon: \"Chroma Katana\"\n  },\n  saika: {\n    isSpoiler: true,\n    method: \"Story\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"electric\",\n    weapon: \"Big Bang Edge\"\n  },\n  ibuki: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"wind\",\n    weapon: \"Shield Hammer\"\n  },\n  vasara: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"dark\",\n    weapon: \"Chroma Katana\"\n  },\n  hotaru: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"earth\",\n    weapon: \"Bitball\"\n  },\n  kubira: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"fire\",\n    weapon: \"Greataxe\"\n  },\n  azami: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"dark\",\n    weapon: \"Ether Cannon\"\n  },\n  uka: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"earth\",\n    weapon: \"Knuckle Claws\"\n  },\n  raiko: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"electric\",\n    weapon: \"Shield Hammer\"\n  },\n  tokiha: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"ice\",\n    weapon: \"Megalance\"\n  },\n  shiki: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"wind\",\n    weapon: \"Knuckle Claws\"\n  },\n  nyuutsu: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"fire\",\n    weapon: \"Chroma Katana\"\n  },\n  yuuouu: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"water\",\n    weapon: \"Greataxe\"\n  },\n  zakuro: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"electric\",\n    weapon: \"Knuckle Claws\"\n  },\n  musubi: {\n    method: \"Blade quest\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"electric\",\n    weapon: \"Bitball\",\n    link: \"http://xenoblade.wikia.com/wiki/Tranquility\",\n    methodName: \"Tranquility\"\n  },\n  idaten: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"wind\",\n    weapon: \"Bitball\"\n  },\n  mei: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"dark\",\n    weapon: \"Megalance\"\n  },\n  dikarao: {\n    method: \"Core Crystal\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"earth\",\n    weapon: \"Megalance\",\n    link: \"http://xenoblade.wikia.com/wiki/Beastly_Core_Crystal\",\n    methodName: \"Beastly Core Crystal\"\n  },\n  teni: {\n    method: \"Core Crystal\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"electric\",\n    weapon: \"Ether Cannon\",\n    link: \"http://xenoblade.wikia.com/wiki/Sealed_Core_Crystal\",\n    methodName: \"Sealed Core Crystal\"\n  },\n  guren: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"ice\",\n    weapon: \"Shield Hammer\"\n  },\n  yaegiri: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"wind\",\n    weapon: \"Greataxe\"\n  },\n  mikumari: {\n    method: \"Blade quest\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"water\",\n    weapon: \"Megalance\",\n    link: \"http://xenoblade.wikia.com/wiki/Crystal_Clear\",\n    methodName: \"Crystal Clear\"\n  },\n  seori: {\n    method: \"Blade quest\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"ice\",\n    weapon: \"Chroma Katana\",\n    link: \"http://xenoblade.wikia.com/wiki/Blade-Sharp_Memory\",\n    methodName: \"Blade-Sharp Memory\"\n  },\n  rinne: {\n    method: \"Core Crystal\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"water\",\n    weapon: \"Ether Cannon\",\n    link: \"http://xenoblade.wikia.com/wiki/Inherited_Core_Crystal\",\n    methodName: \"Inherited Core Crystal\"\n  },\n  menou: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"earth\",\n    weapon: \"Greataxe\"\n  },\n  kasane: {\n    method: \"Core Crystal\",\n    isVisible: true,\n    role: \"tnk\",\n    type: \"dark\",\n    weapon: \"Shield Hammer\",\n    link: \"http://xenoblade.wikia.com/wiki/Lucky_Core_Crystal\",\n    methodName: \"Lucky Core Crystal\"\n  },\n  tsuki: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"ice\",\n    weapon: \"Bitball\"\n  },\n  nanakoori: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"hlr\",\n    type: \"ice\",\n    weapon: \"Knuckle Claws\"\n  },\n  kosmos: {\n    method: \"Random\",\n    isVisible: true,\n    role: \"atk\",\n    type: \"light\",\n    weapon: \"Ether Cannon\"\n  },\n  hanabuster: {\n    isDlc: true,\n    method: \"Blade quest\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"light\",\n    weapon: \"Shield Hammer\"\n  },\n  telos: {\n    isDlc: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"dark\",\n    weapon: \"Greataxe\"\n  },\n  shulk: {\n    isDlc: true,\n    method: \"Challenge Battle Mode\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"light\",\n    weapon: \"Monado\"\n  },\n  fiorun: {\n    isDlc: true,\n    method: \"Challenge Battle Mode\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"wind\",\n    weapon: \"Knives\"\n  },\n  hibana: {\n    isDlc: true,\n    method: \"Core Crystal\",\n    isVisible: false,\n    role: \"hlr\",\n    type: \"fire\",\n    weapon: \"Bitball\",\n    link: \"http://xenoblade.wikia.com/wiki/Ebullient_Core_Crystal\",\n    methodName: \"Ebullient Core Crystal\"\n  },\n  kamuya: {\n    isDlc: true,\n    method: \"Core Crystal\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"light\",\n    weapon: \"Uchigatana\",\n    link: \"http://xenoblade.wikia.com/wiki/Divine_Core_Crystal\",\n    methodName: \"Divine Core Crystal\"\n  },\n  eruma: {\n    isDlc: true,\n    method: \"Challenge Battle Mode\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"dark\",\n    weapon: \"Dual Swords\"\n  },\n  yoshitsune: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"hlr\",\n    type: \"electric\",\n    weapon: \"Calamity Scythe\"\n  },\n  benkei: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"earth\",\n    weapon: \"Cobra Bardiche\"\n  },\n  satahiko: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"dark\",\n    weapon: \"Infinity Fans\"\n  },\n  kamui: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"wind\",\n    weapon: \"Brilliant Twinblades\"\n  },\n  zantetsu: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"wind\",\n    weapon: \"Sword Tonfa\"\n  },\n  ragou: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"atk\",\n    type: \"fire\",\n    weapon: \"Decimation Cannon\"\n  },\n  ootsuchi: {\n    isNewGamePlus: true,\n    method: \"Random\",\n    isVisible: false,\n    role: \"tnk\",\n    type: \"earth\",\n    weapon: \"Rockrending Gauntlets\"\n  }\n};\n\nexport default blades;\n","import Blades from './data/blades';\n\n// create state for app by using static data\nfunction createNew(){\n  Object.keys(Blades).forEach( (blade) => {\n     Blades[blade].obtained = false;\n     Blades[blade].status = \"need\"\n  });\n}\n\ncreateNew();\n\nconst blades = {...Blades};\n\nexport default blades;\n","import React, { Component } from \"react\";\nimport \"./BladeIndicator.css\";\n\nclass BladeIndicator extends Component {\n  updateObtained = event => {\n    const checked = event.target.checked;\n    const status = checked ? \"obtained\" : \"need\";\n    const updatedBlade = {\n      ...this.props.details,\n      [event.target.name]: checked,\n      status\n    };\n\n    this.props.updateObtained(updatedBlade);\n  };\n\n  renderAvatar = () => {\n    const { image } = this.props.staticDetails;\n\n    return (\n      <div className=\"blade-image-wrapper\">\n        <div\n          className=\"blade-image\"\n          style={{ backgroundImage: `url(${image})` }}\n        >\n          {\" \"}\n        </div>\n        {this.renderStatus()}\n      </div>\n    );\n  };\n\n  renderStatus = () => {\n    return (\n      <div className=\"blade-indicator-wrapper\">\n        <div className=\"blade-indicator\">\n          <div className=\"blade-indicator-obtained\" />\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const { obtained, status } = this.props.details;\n    const { name } = this.props.staticDetails;\n\n    return (\n      <div className=\"blade-obtained\">\n        <input\n          id={`${name}-checkbox`}\n          type=\"checkbox\"\n          name=\"obtained\"\n          checked={obtained}\n          value={status}\n          onChange={this.updateObtained}\n        />\n        <label htmlFor={`${name}-checkbox`}>{this.renderAvatar()}</label>\n      </div>\n    );\n  }\n}\n\nexport default BladeIndicator;\n","import React, { Component } from \"react\";\nimport BladeIndicator from \"../BladeIndicator/BladeIndicator\";\nimport PropTypes from \"prop-types\";\nimport \"./Blade.css\";\n\nclass Blade extends Component {\n  static propTypes = {\n    index: PropTypes.string,\n    details: PropTypes.shape({\n      method: PropTypes.string,\n      isVisible: PropTypes.boolean,\n      role: PropTypes.string,\n      type: PropTypes.string,\n      weapon: PropTypes.string\n    }),\n    staticDetails: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string\n    }),\n    updateObtained: PropTypes.func\n  };\n\n  makeBladeClassName = () => {\n    let className = \"blade\";\n\n    if (this.props.details.isDlc) className += \" is-dlc\";\n    if (this.props.details.isSpoiler) className += \" is-spoiler\";\n    if (this.props.details.isNewGamePlus) className += \" is-new-game-plus\";\n\n    return className;\n  };\n\n  updateObtained = updatedBlade => {\n    this.props.updateObtained(this.props.index, updatedBlade);\n  };\n\n  renderInfo = () => {\n    const { method, methodName, role, type, weapon, link } = this.props.details;\n    const { name } = this.props.staticDetails;\n    const obtainment =\n      typeof link !== \"undefined\" ? (\n        <p>\n          <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n            {methodName}\n          </a>\n        </p>\n      ) : (\n        <p>{method}</p>\n      );\n\n    return (\n      <div className=\"blade-description\">\n        <h2 className=\"blade-name\"> {name}</h2>\n        <h3 className=\"blade-info\">\n          <span className=\"blade-role\">{role}</span> /{\" \"}\n          <span className=\"blade-type\">{type}</span>\n        </h3>\n        <p>{weapon}</p>\n        {obtainment}\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <div className={this.makeBladeClassName()}>\n        <BladeIndicator\n          details={this.props.details}\n          staticDetails={this.props.staticDetails}\n          updateObtained={this.updateObtained}\n        />\n        {this.renderInfo()}\n      </div>\n    );\n  }\n}\n\nexport default Blade;\n","import React from \"react\";\nimport \"./ControlSelect.css\";\n\nfunction ControlSelect(props) {\n  const { name, label, handleChange, options } = props;\n  return (\n    <div className=\"blade-list-control is-select\">\n      <label htmlFor={`xc2-${name}`}>{label}</label>\n      <div className=\"xc2-select\">\n        <select id={`xc2-${name}`} name={name} onChange={handleChange}>\n          {options.map(option => {\n            return (\n              <option key={`xc2-${name}-${option.name}`} value={option.value}>\n                {option.name}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default ControlSelect;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Accordion.css\";\n\nclass Accordion extends Component {\n  state = {\n    isOpen: this.props.isOpen || false\n  };\n\n  accordionRef = React.createRef();\n\n  transitionOptions = {\n    classNames: \"xc2-accordion\",\n    timeout: { enter: 400, exit: 400 }\n  };\n\n  updateUserSettingsHeight = oldHeight => {\n    const element = this.accordionRef.current;\n    let height = \"0px\";\n\n    if (this.state.isOpen) {\n      element.style.height = \"auto\";\n      height = `${element.offsetHeight}px`;\n    }\n    if (height !== oldHeight) {\n      element.style.height = oldHeight;\n      //eslint-disable-next-line\n      element.clientHeight;\n      element.style.height = height;\n    }\n  };\n\n  handleTransitionEnd = event => {\n    const element = this.accordionRef.current;\n    const { isOpen } = this.state;\n\n    element.style.height = isOpen ? \"auto\" : \"0px\";\n  };\n\n  componentDidMount() {\n    if (!this.state.isOpen) {\n      this.accordionRef.current.style.height = \"0px\";\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isOpen } = prevProps;\n    if (isOpen !== this.props.isOpen) {\n      this.setState({ isOpen: this.props.isOpen });\n    }\n    const currentHeight = `${this.accordionRef.current.clientHeight}px`;\n    this.updateUserSettingsHeight(currentHeight);\n  }\n\n  render() {\n    const { isOpen } = this.state;\n    const { children } = this.props;\n\n    return (\n      <CSSTransition {...this.transitionOptions} in={isOpen} appear={isOpen}>\n        <div\n          className={`xc2-accordion ${isOpen ? \"is-open\" : \"\"}`}\n          ref={this.accordionRef}\n          onTransitionEnd={this.handleTransitionEnd}\n        >\n          {children}\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n\nexport default Accordion;\n","const options = {\n  method : [\n    {\n      name : \"All Methods\",\n      value : \"\"\n    },\n    {\n      name : \"Blade Quest\",\n      value : \"Blade quest\"\n    },\n    {\n      name : \"Core Crystal\",\n      value : \"Core Crystal\"\n    },\n    {\n      name : \"Challenge Battle Mode\",\n      value : \"Challenge Battle Mode\"\n    },\n    {\n      name : \"Random\",\n      value : \"Random\"\n    },\n    {\n      name : \"Story\",\n      value : \"Story\"\n    },\n  ],\n  role : [\n    {\n      name : \"All Roles\",\n      value : \"\"\n    },\n    {\n      name : \"Attack\",\n      value : \"atk\"\n    },\n    {\n      name : \"Healer\",\n      value : \"hlr\"\n    },\n    {\n      name : \"Tank\",\n      value : \"tnk\"\n    },\n  ],\n  status : [\n    {\n      name : 'All',\n      value : ''\n    },\n    {\n      name : 'Obtained',\n      value : 'obtained'\n    },\n    {\n      name : 'Need',\n      value : 'need'\n    },\n  ],\n  type : [\n    {\n      name : \"All Types\",\n      value : \"\"\n    },\n    {\n      name : \"Dark\",\n      value : \"dark\"\n    },\n    {\n      name : \"Fire\",\n      value : \"fire\"\n    },\n    {\n      name : \"Earth\",\n      value : \"earth\"\n    },\n    {\n      name : \"Electric\",\n      value : \"electric\"\n    },\n    {\n      name : \"Ice\",\n      value : \"ice\"\n    },\n    {\n      name : \"Light\",\n      value : \"light\"\n    },\n    {\n      name : \"Water\",\n      value : \"water\"\n    },\n    {\n      name : \"Wind\",\n      value : \"wind\"\n    },\n  ]\n}\n\nexport default options;\n","import React, { Component } from \"react\";\nimport ControlSelect from \"../ControlSelect/ControlSelect\";\nimport Accordion from \"../Accordion\";\nimport options from \"../../data/filterOptions\";\n\nclass FilterOptions extends Component {\n  handleChange = event => {\n    const target = event.currentTarget;\n    const key = target.name;\n    let value;\n\n    if (target.type === \"checkbox\") {\n      value = event.target.checked;\n    } else {\n      value = target.value;\n    }\n\n    const filter = {\n      [key]: value\n    };\n\n    this.props.updateFilters(key, filter, value);\n  };\n\n  render() {\n    const { isOpen } = this.props;\n    return (\n      <Accordion isOpen={isOpen}>\n        <div className=\"blade-list-controls\">\n          <ControlSelect\n            name=\"status\"\n            label=\"Obtainment Stauts\"\n            options={options.status}\n            handleChange={this.handleChange}\n          />\n\n          <ControlSelect\n            name=\"type\"\n            label=\"Blade Type\"\n            options={options.type}\n            handleChange={this.handleChange}\n          />\n\n          <ControlSelect\n            name=\"role\"\n            label=\"Blade Role\"\n            options={options.role}\n            handleChange={this.handleChange}\n          />\n\n          <ControlSelect\n            name=\"method\"\n            label=\"Obtainment\"\n            options={options.method}\n            handleChange={this.handleChange}\n          />\n        </div>\n      </Accordion>\n    );\n  }\n}\n\nexport default FilterOptions;\n","import React, { Component } from \"react\";\nimport \"./ControlToggle.css\";\n\nclass ControlToggle extends Component {\n  updateOptions = event => {\n    const name = event.target.name;\n    const checked = event.target.checked;\n\n    this.props.updateOptions(checked, name);\n  };\n\n  renderCheckbox = (name, label) => {\n    return (\n      <label htmlFor={`xc2-${name}`}>\n        <div className=\"xc2-button-settings\">{label}</div>\n      </label>\n    );\n  };\n\n  render() {\n    const { name, label, isChecked } = this.props;\n\n    return (\n      <div className=\"blade-list-control is-checkbox\">\n        <input\n          type=\"checkbox\"\n          id={`xc2-${name}`}\n          name={name}\n          onChange={this.updateOptions}\n          checked={isChecked}\n        />\n        {this.renderCheckbox(name, label)}\n      </div>\n    );\n  }\n}\n\nexport default ControlToggle;\n","import React, { Component } from \"react\";\nimport ControlToggle from \"../ControlToggle/ControlToggle\";\nimport Accordion from \"../Accordion\";\nimport \"./UserSettings.css\";\n\nclass UserSettings extends Component {\n  //keep track of what settings user selects\n  state = {\n    options: {\n      isDlc: false,\n      isNewGamePlus: false,\n      isSpoiler: false\n    }\n  };\n\n  updateOptions = (option, index) => {\n    const options = { ...this.state.options };\n\n    options[index] = option;\n    this.setState({ options }, () => {\n      this.props.updateBladeListByOptions(this.state.options);\n    });\n  };\n\n  // check for user settings\n  componentDidMount() {\n    const userOptions = localStorage.getItem(\"userOptions\");\n\n    if (userOptions) {\n      this.setState({ options: JSON.parse(userOptions) }, () => {\n        this.props.updateBladeListByOptions(this.state.options);\n      });\n    }\n  }\n\n  // remember the user's settings\n  componentDidUpdate(prevProps, prevState) {\n    localStorage.setItem(\"userOptions\", JSON.stringify(this.state.options));\n  }\n\n  render() {\n    const { isDlc, isNewGamePlus, isSpoiler } = this.state.options;\n    const { isOpen } = this.props;\n    return (\n      <Accordion isOpen={isOpen}>\n        <div className=\"blade-list-controls xc2-user-settings\">\n          <ControlToggle\n            name=\"isSpoiler\"\n            label=\"Show Spoiler Blades\"\n            updateOptions={this.updateOptions}\n            isChecked={isSpoiler}\n          />\n          <ControlToggle\n            name=\"isDlc\"\n            label=\"Show DLC Blades\"\n            updateOptions={this.updateOptions}\n            isChecked={isDlc}\n          />\n          <ControlToggle\n            name=\"isNewGamePlus\"\n            label=\"Show New Game+ Blades\"\n            updateOptions={this.updateOptions}\n            isChecked={isNewGamePlus}\n          />\n        </div>\n      </Accordion>\n    );\n  }\n}\n\nexport default UserSettings;\n","import React, { Component } from \"react\";\nimport Octicon from \"react-octicon\";\nimport FilterOptions from \"../FilterOptions/FilterOptions\";\nimport UserSettings from \"../UserSettings/UserSettings\";\nimport \"./ListControls.css\";\n\nclass ListControls extends Component {\n  state = {\n    isSettingsOpen: false,\n    isFiltersOpen: true\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n    const target = event.currentTarget;\n    const { name } = target;\n\n    const updatedState = {\n      [name]: !this.state[name]\n    };\n\n    this.setState({ ...updatedState });\n  };\n\n  renderButtons = () => {\n    const { isSettingsOpen, isFiltersOpen } = this.state;\n    return (\n      <div className=\"xc2-settings-container\">\n        <button\n          name=\"isSettingsOpen\"\n          className={`xc2-settings-toggle ${isSettingsOpen ? \"is-active\" : \"\"}`}\n          onClick={this.handleClick}\n        >\n          <span>\n            <Octicon name=\"gear\" />{\" \"}\n            {isSettingsOpen ? \"Close Settings\" : \"Open Settings\"}\n          </span>\n        </button>\n        <button\n          name=\"isFiltersOpen\"\n          className={`xc2-settings-toggle ${isFiltersOpen ? \"is-active\" : \"\"}`}\n          onClick={this.handleClick}\n        >\n          <span>\n            <Octicon name=\"settings\" />{\" \"}\n            {isFiltersOpen ? \"Hide Filters\" : \"Show Filters\"}\n          </span>\n        </button>\n      </div>\n    );\n  };\n\n  componentDidMount() {\n    if (window.innerWidth < 600) {\n      this.setState({ isFiltersOpen: false });\n    }\n  }\n\n  render() {\n    const { updateFilters, updateBladeListByOptions } = this.props;\n    const { isSettingsOpen, isFiltersOpen } = this.state;\n    return (\n      <div className=\"xc2-list-controls\">\n        <form>\n          {this.renderButtons()}\n          <UserSettings\n            isOpen={isSettingsOpen}\n            updateFilters={updateFilters}\n            updateBladeListByOptions={updateBladeListByOptions}\n          />\n          <FilterOptions isOpen={isFiltersOpen} updateFilters={updateFilters} />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ListControls;\n","import React, { Component } from \"react\";\n// generated state\nimport staticBladeData from \"../../data/staticBladeData\";\nimport blades from \"../../blades\";\nimport Blade from \"../Blade/Blade\";\nimport ListControls from \"../ListControls/ListControls\";\nimport \"./BladeList.css\";\n\nclass BladeList extends Component {\n  state = {\n    blades,\n    staticBladeData,\n    filters: {}\n  };\n\n  // update which blades a user has obtained\n  updateObtained = (blade, updatedBlade) => {\n    const blades = { ...this.state.blades };\n\n    blades[blade] = updatedBlade;\n    this.setState({ blades });\n  };\n\n  // update filters state\n  updateFilters = (key, filter, hasValue) => {\n    const filters = { ...this.state.filters };\n\n    // option selected has value of false (empty value string)?\n    if (hasValue) {\n      filters[key] = filter;\n    } else {\n      delete filters[key];\n    }\n\n    this.setState({ filters });\n  };\n\n  updateBladeListByOptions = options => {\n    const blades = { ...this.state.blades };\n    let updatedBlades = {};\n    Object.keys(this.state.blades).forEach(blade => {\n      Object.keys(options).forEach(option => {\n        if (blades[blade].hasOwnProperty(option)) {\n          blades[blade].isVisible = options[option];\n        }\n      });\n      updatedBlades[blade] = blades[blade];\n    });\n\n    this.setState({ blades: updatedBlades });\n  };\n\n  filterBlades = blade => {\n    return Object.keys(this.state.filters)\n      .map(filter => {\n        // very specific retrival based on our data\n        return (\n          this.state.blades[blade].isVisible &&\n          this.state.blades[blade][filter] ===\n            this.state.filters[filter][filter]\n        );\n      })\n      .every(item => item); // return if every selected filter applies to a blade\n  };\n\n  // check if user has exisiting list\n  componentDidMount() {\n    const localStoredBlades = localStorage.getItem(\"obtainedBlades\");\n\n    if (localStoredBlades) {\n      this.setState({ blades: JSON.parse(localStoredBlades) });\n    }\n  }\n\n  // remember the user's list\n  componentDidUpdate() {\n    localStorage.setItem(\"obtainedBlades\", JSON.stringify(this.state.blades));\n  }\n\n  // create a blade card\n  renderBlade = blade => {\n    return (\n      <Blade\n        key={blade}\n        index={blade}\n        staticDetails={this.state.staticBladeData[blade]}\n        details={this.state.blades[blade]}\n        updateObtained={this.updateObtained}\n      />\n    );\n  };\n\n  // depending on the filters, render the needed blades\n  renderBlades = () => {\n    // render default list (hide spoilers, dlc, ng+ on inital render)\n    if (Object.keys(this.state.filters).length < 1) {\n      return Object.keys(this.state.blades)\n        .filter(blade => this.state.blades[blade].isVisible)\n        .map(this.renderBlade);\n    } else {\n      // filter based on applied filters\n      const filteredList = Object.keys(this.state.blades).filter(\n        this.filterBlades\n      );\n      // check if new applied filters apply to any blades\n      if (filteredList.length) {\n        return filteredList.map(this.renderBlade);\n      } else {\n        return (\n          <h3>\n            {\" \"}\n            Nothing to see here{\" \"}\n            <span role=\"img\" aria-label=\"dissapointed\">\n              😞{\" \"}\n            </span>\n            .\n          </h3>\n        );\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"blade-container\">\n        <ListControls\n          updateFilters={this.updateFilters}\n          updateBladeListByOptions={this.updateBladeListByOptions}\n        />\n        <div className=\"blades\">{this.renderBlades()}</div>\n      </div>\n    );\n  }\n}\n\nexport default BladeList;\n","import React from \"react\";\nimport BladeList from \"../BladeList/BladeList\";\n\nconst Home = () => (\n  <div className=\"App\">\n    <div className=\"container\">\n      <BladeList />\n    </div>\n  </div>\n);\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst About = () => (\n  <div className=\"container\">\n    <h1>About</h1>\n    <p style={{ fontSize: \"1.15rem\" }}>\n      I loved playing Xenoblade Chronicles 2 and wanted to collect all the\n      blades in the game. I tried to figure out what blades I needed to collect\n      but the game didn't seem to have a checklist feature. I had some free time\n      so I decided to make this simple checklist app. All the data for the\n      blades was obtain from the{\" \"}\n      <a href=\"https://xenoblade.fandom.com/wiki/Blade\">\n        Xenoblade fandom wiki page\n      </a>\n      .\n    </p>\n    <p style={{ fontSize: \"1.15rem\" }}>\n      In order to prevent spoilers, I have hidden some blades from the default\n      view; you can enable spoilers in the settings option along with the blades\n      obtained in the dlc and new game plus.\n    </p>\n    <Link to=\"/\">Back to List</Link>\n  </div>\n);\n\nexport default About;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport Home from \"../Home\";\nimport About from \"../About\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Header />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n"],"sourceRoot":""}